<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="BSModel01_8h" kind="file">
    <compoundname>BSModel01.h</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">ctime</includes>
    <includes local="no">vector</includes>
    <includedby refid="BSEq_8h" local="yes">BSEq.h</includedby>
    <includedby refid="Options_8h" local="yes">Options.h</includedby>
    <includedby refid="BSModel01_8cpp" local="yes">BSModel01.cpp</includedby>
    <includedby refid="Main24_8cpp" local="yes">Main24.cpp</includedby>
    <incdepgraph>
      <node id="134">
        <label>ctime</label>
      </node>
      <node id="135">
        <label>vector</label>
      </node>
      <node id="133">
        <label>cstdlib</label>
      </node>
      <node id="132">
        <label>BSModel01.h</label>
        <link refid="BSModel01.h"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="140">
        <label>Options.h</label>
        <link refid="Options_8h"/>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>Main24.cpp</label>
        <link refid="Main24_8cpp"/>
      </node>
      <node id="137">
        <label>BSEq.h</label>
        <link refid="BSEq_8h"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>Options.cpp</label>
        <link refid="Options_8cpp"/>
      </node>
      <node id="142">
        <label>BSModel01.cpp</label>
        <link refid="BSModel01_8cpp"/>
      </node>
      <node id="138">
        <label>BSEq.cpp</label>
        <link refid="BSEq_8cpp"/>
      </node>
      <node id="136">
        <label>BSModel01.h</label>
        <link refid="BSModel01.h"/>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classBSModel" prot="public">BSModel</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="BSModel01_8h_1afbb1a5715857075c187084894fc00d31" prot="public" static="no">
        <type>vector&lt; double &gt;</type>
        <definition>typedef vector&lt;double&gt; SamplePath</definition>
        <argsstring></argsstring>
        <name>SamplePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/OptionPricing/BSModel01.h" line="29" column="1" bodyfile="/home/esanchez/Dropbox/OptionPricing/BSModel01.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definition of a class using the Box<ndash/>Muller method for sample paths. </para>    </briefdescription>
    <detaileddescription>
<para>We start by showing how to generate samples of random variables with standard normal distribution. In C++ we have at our disposal a function rand(), which generates integer numbers, simulating a sequence of i.i.d. random variables, uniformly distributed within the range from 0 to RAND_MAX. We can use the Box–Muller method to produce the following recipe for generating sample paths.</para><para><simplesect kind="warning"><para>This code is also listed and fully explained in the book **Numerical Methods in Finance with C++** by Maciej Capiński and Tomasz Zastawniak, published in September 2012.</para></simplesect>
<simplesect kind="author"><para>: Eduardo J. Sanchez (ejspeiro) - ejspeiro at gmail dot com </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="19"><highlight class="preprocessor">#ifndef<sp/>BSModel01_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSModel01_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="BSModel01_8h_1afbb1a5715857075c187084894fc00d31" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>vector&lt;double&gt;<sp/><ref refid="BSModel01_8h_1afbb1a5715857075c187084894fc00d31" kindref="member">SamplePath</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classBSModel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBSModel" kindref="compound">BSModel</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33" refid="classBSModel_1a2b37a14d9aaab033d676dd16381f7f19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classBSModel_1a2b37a14d9aaab033d676dd16381f7f19" kindref="member">S0</ref>;</highlight></codeline>
<codeline lineno="34" refid="classBSModel_1add3230c0df8e47623116b439598c0de3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classBSModel_1add3230c0df8e47623116b439598c0de3" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="35" refid="classBSModel_1a1267641043c16cd9baf2eb242320f0d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classBSModel_1a1267641043c16cd9baf2eb242320f0d3" kindref="member">sigma</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classBSModel_1a309dd895251cfd050b2d50a30abfc5fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBSModel_1a309dd895251cfd050b2d50a30abfc5fb" kindref="member">BSModel</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S0_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S0<sp/>=<sp/>S0_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r_;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>sigma_;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GenerateSamplePath(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/><ref refid="BSModel01_8h_1afbb1a5715857075c187084894fc00d31" kindref="member">SamplePath</ref>&amp;<sp/>S);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/esanchez/Dropbox/OptionPricing/BSModel01.h"/>
  </compounddef>
</doxygen>
