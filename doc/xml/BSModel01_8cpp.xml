<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="BSModel01_8cpp" kind="file">
    <compoundname>BSModel01.cpp</compoundname>
    <includes refid="BSModel01_8h" local="yes">BSModel01.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="130">
        <label>cmath</label>
      </node>
      <node id="125">
        <label>BSModel01.cpp</label>
        <link refid="BSModel01.cpp"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>ctime</label>
      </node>
      <node id="129">
        <label>vector</label>
      </node>
      <node id="127">
        <label>cstdlib</label>
      </node>
      <node id="126">
        <label>BSModel01.h</label>
        <link refid="BSModel01_8h"/>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="BSModel01_8cpp_1a43016d873124d39034edb8cd164794db" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double pi</definition>
        <argsstring></argsstring>
        <name>pi</name>
        <initializer>= 4.0*atan(1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/OptionPricing/BSModel01.cpp" line="23" column="1" bodyfile="/home/esanchez/Dropbox/OptionPricing/BSModel01.cpp" bodystart="23" bodyend="-1"/>
        <referencedby refid="BSModel01_8cpp_1aa5430ef684e160310d140e8914e32218" compoundref="BSModel01_8cpp" startline="25" endline="31">Gauss</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="BSModel01_8cpp_1aa5430ef684e160310d140e8914e32218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gauss</definition>
        <argsstring>()</argsstring>
        <name>Gauss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/OptionPricing/BSModel01.cpp" line="25" column="1" bodyfile="/home/esanchez/Dropbox/OptionPricing/BSModel01.cpp" bodystart="25" bodyend="31"/>
        <references refid="BSModel01_8cpp_1a43016d873124d39034edb8cd164794db" compoundref="BSModel01_8cpp" startline="23">pi</references>
        <referencedby refid="classBSModel_1aad0f0d6d1b9df4d76d03bd0b477e1347" compoundref="BSModel01_8cpp" startline="33" endline="41">BSModel::GenerateSamplePath</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of a class using the Box<ndash/>Muller method for sample paths. </para>    </briefdescription>
    <detaileddescription>
<para>We start by showing how to generate samples of random variables with standard normal distribution. In C++ we have at our disposal a function rand(), which generates integer numbers, simulating a sequence of i.i.d. random variables, uniformly distributed within the range from 0 to RAND_MAX. We can use the Box–Muller method to produce the following recipe for generating sample paths.</para><para><simplesect kind="warning"><para>This code is also listed and fully explained in the book **Numerical Methods in Finance with C++** by Maciej Capiński and Tomasz Zastawniak, published in September 2012.</para></simplesect>
<simplesect kind="author"><para>: Eduardo J. Sanchez (ejspeiro) - ejspeiro at gmail dot com </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="19"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="BSModel01_8h" kindref="compound">BSModel01.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="BSModel01_8cpp_1a43016d873124d39034edb8cd164794db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="BSModel01_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">pi</ref><sp/>=<sp/>4.0*atan(1.0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="BSModel01_8cpp_1aa5430ef684e160310d140e8914e32218" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="BSModel01_8cpp_1aa5430ef684e160310d140e8914e32218" kindref="member">Gauss</ref>(<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>U1<sp/>=<sp/>(rand()<sp/>+<sp/>1.0)/(RAND_MAX<sp/>+<sp/>1.0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>U2<sp/>=<sp/>(rand()<sp/>+<sp/>1.0)/(RAND_MAX<sp/>+<sp/>1.0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(-2.0*log(U1))*cos(2.0*<ref refid="BSModel01_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">pi</ref>*U2);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classBSModel_1aad0f0d6d1b9df4d76d03bd0b477e1347" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBSModel_1aad0f0d6d1b9df4d76d03bd0b477e1347" kindref="member">BSModel::GenerateSamplePath</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/><ref refid="BSModel01_8h_1afbb1a5715857075c187084894fc00d31" kindref="member">SamplePath</ref>&amp;<sp/>S)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>St<sp/>=<sp/><ref refid="classBSModel_1a2b37a14d9aaab033d676dd16381f7f19" kindref="member">S0</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>m;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>S[k]<sp/>=<sp/>St*exp((<ref refid="classBSModel_1add3230c0df8e47623116b439598c0de3" kindref="member">r</ref><sp/>-<sp/><ref refid="classBSModel_1a1267641043c16cd9baf2eb242320f0d3" kindref="member">sigma</ref>*<ref refid="classBSModel_1a1267641043c16cd9baf2eb242320f0d3" kindref="member">sigma</ref>*0.5)*(T/m)<sp/>+<sp/>sigma*sqrt(T/m)*<ref refid="BSModel01_8cpp_1aa5430ef684e160310d140e8914e32218" kindref="member">Gauss</ref>());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>St<sp/>=<sp/>S[k];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/esanchez/Dropbox/OptionPricing/BSModel01.cpp"/>
  </compounddef>
</doxygen>
